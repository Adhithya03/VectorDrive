<E:/VectorDrive\main.tex>
\input{misc/preamble/preamble}

\begin{document}
\pagenumbering{roman}  

    \input{misc/titleBonAck/titleBonAck} % Title, Bonafide Certificate, Acknowledgement
    \input{misc/abstract} % Abstract
    \input{misc/tableOfContents}

    \input{sections/section1/section1.tex} % Introduction
    \input{sections/section2/section2.tex} % Block diagram and explanation
    \input{sections/section3/section3.tex} % Simulation result
    \input{sections/section4/section4.tex} % IPM and PCB design Current measurement 
    \input{sections/section5/section5.tex} % Parameter estimation 
    \input{sections/section6/section6.tex} % Space vector PWM
    % \input{sections/section7/section7.tex} % Conclusion
    % \input{sections/section8/section8.tex} % Appendix

\end{document}
</E:/VectorDrive\main.tex>

<E:/VectorDrive\mainPPT.tex>
\input{misc/preamble/preamblePPT.tex}

\begin{document}

\begin{frame}{}
	\maketitle
\end{frame}


</E:/VectorDrive\mainPPT.tex>

<E:/VectorDrive\misc\abstract.tex>

\setcounter{page}{1}

\prelimsection{\centering ABSTRACT}

\hspace{0.2in}Field-oriented control (FOC) is an advanced technique to achieve high precision torque and flux control in induction motors akin to DC machines. This enables faster dynamic response and efficiency improvements. This project involved MATLAB/Simulink-based modeling and analysis of FOC control on a 5 HP, 400 V, 50 Hz three-phase induction motor with a squirrel cage rotor. The system was simulated with both FOC and conventional scalar VVVF control for comparison. FOC reduced the settling time from 1.7 sec to 0.34 sec and peak overshoot from 20\% to 2\% during load disturbances. However, 30\% longer computation time was needed. Rotor flux angle estimation was also critical, with errors directly impacting performance. The key contribution is a simulation platform to develop and test FOC algorithms before hardware implementation. Results validated that FOC outperforms VVVF control despite greater complexity. Future work should focus on real-time testing and position sensor integration to progress towards a complete motor drive solution. Overall, this project successfully demonstrated a MATLAB/Simulink-based FOC system for induction motors with quantitative performance improvements over scalar control. The simulation model provides a foundation for future prototyping of the algorithm on commercial drive systems.


\newpage
</E:/VectorDrive\misc\abstract.tex>

<E:/VectorDrive\misc\tableOfContents.tex>
\begin{center}
    {\large \textbf{TABLE OF CONTENTS}}
\end{center}

\vspace{0.1in}

\begin{center}
\makebox[\textwidth][c]{
\begin{threeparttable}
\setlength{\tabcolsep}{35pt} % Adjust the space as needed
    \begin{tabularx}{\textwidth}{@{}XlX@{}}
    \multicolumn{1}{l}{\textbf{CHAPTER NO.}} & \textbf{TITLE} & \multicolumn{1}{l}{\textbf{PAGE NO.}} \\
    % Add your table rows here
    \end{tabularx}
\end{threeparttable}
}
\end{center}

\tableofcontents

\newpage
\listoffigures
\addcontentsline{toc}{section}{LIST OF FIGURES}

\newpage
\listoftables
\addcontentsline{toc}{section}{LIST OF TABLES}
\newpage

\newpage
\prelimsection{\centering LIST OF ABBREVIATIONS}

\vspace{10mm}

\begin{itemize}
\item[]\textbf{ FOC} - \textbf{F}ield \textbf{O}riented \textbf{C}ontrol

\item[]\textbf{ AC} - \textbf{A}lternating \textbf{C}urrent
\item[]\textbf{ IM} - \textbf{I}nduction \textbf{M}otor

\item[]\textbf{ DC} - \textbf{D}irect \textbf{C}urrent
\item[]\textbf{ PWM} - \textbf{P}ulse \textbf{W}idth \textbf{M}odulation
\item[]\textbf{ PI} - \textbf{P}roportional \textbf{I}ntegral

\item[]\textbf{ PID} - \textbf{P}roportional \textbf{I}ntegral \textbf{D}erivative

\item[]\textbf{ PMSM} - \textbf{P}ermanent \textbf{M}agnet \textbf{S}ynchronous \textbf{M}otor
\item[]\textbf{ SVPWM} - \textbf{S}pace \textbf{V}ector \textbf{P}ulse \textbf{W}idth \textbf{M}odulation
\item[]\textbf{ DSP} - \textbf{D}igital \textbf{S}ignal \textbf{P}rocessor
\item[]\textbf{ d-q} - \textbf{d}irect-\textbf{q}uadrature
\item[]\textbf{ VVVF} - \textbf{V}ariable \textbf{V}oltage \textbf{V}ariable \textbf{F}requency

\item[]\textbf{ACIM} - \textbf{AC} \textbf{I}nduction \textbf{M}otor

\end{itemize}

\newpage
</E:/VectorDrive\misc\tableOfContents.tex>

<E:/VectorDrive\misc\preamble\preamble.tex>
\documentclass[a4paper,12pt]{article}
\usepackage{fontspec}
% \setmainfont{Times New Roman}
\usepackage{titlesec}
\usepackage{titletoc}
\usepackage{geometry}
\geometry{
    left=20mm,      % you specified 20 mm
    right=20mm,     % you specified 20 mm
    top=25mm,       % you specified 25 mm
    bottom=25mm     % you specified 25 mm
}
\usepackage{graphicx}
\usepackage{pdfpages}
\usepackage{threeparttable}
\usepackage{tabularx}
\usepackage{booktabs}
\usepackage{amsmath}
\usepackage{etoolbox}
\usepackage{float}
\usepackage{hyperref}
\usepackage{tocloft}
\usepackage{array}
\renewcommand{\cftdot}{}

  
\makeatletter
\renewcommand{\@dotsep}{1000}
\makeatother



\renewcommand{\contentsname}{} 
\titleformat{\section}[hang]{\Large\bfseries}{\thesection}{1em}{}
\titleformat{\subsection}[hang]{\large}{\thesubsection}{1em}{}
\titleformat{\subsubsection}[hang]{}{\thesubsubsection}{1em}{}

\hypersetup{colorlinks=true, linkcolor=black, filecolor=black, urlcolor=black}

\newcommand{\prelimsection}[1]{
    \clearpage
    \phantomsection % Ensures hyperref package compatibility
    \addcontentsline{toc}{section}{#1}
    \section*{\centering #1}
}

\newcommand\customfont{\fontsize{14}{20}\selectfont}
\AtBeginDocument{\customfont}

\counterwithin{figure}{section}
\counterwithin{table}{section}

\titleformat{\section}
  {\Large\bfseries\centering}
  {}
  {0pt}
  {\ifnum\value{section}=0\relax
   \else
   Chapter \thesection\\*[10pt] \fi}
  []
\titleformat{\subsection}[hang]
  {\large}
  {\thesubsection}
  {1em}
  {}
\titleformat{\subsubsection}[hang]
  {}
  {\thesubsubsection}
  {1em}
  {}



\renewcommand{\cfttoctitlefont}{\hfill\Large\bfseries} 
\renewcommand{\cftaftertoctitle}{\hfill}

\newcommand{\tocheader}{
    \noindent
    \hspace*{-1cm}
    \begin{minipage}{\textwidth}
    \begin{center}
    \textbf{CHAPTER NO.} \hfill \textbf{TITLE} \hfill \textbf{PAGE NO.}
    \end{center}
    \end{minipage}\par\vspace{1em}
}


\renewcommand{\tableofcontents}{
    \begingroup
    \tocloftpagestyle{empty}   % No page numbers for ToC and following pages
    \tocheader
    \@starttoc{toc}
    \endgroup
}


% \setlength{\cftbeforesecskip}{0.4pt}   % Reduce spacing before sections in ToC
\setlength{\cftsecnumwidth}{3em}

\renewcommand{\listoffigures}{%
    \section*{\centering LIST OF FIGURES}%
    \@starttoc{lof}%
}
\renewcommand{\listoftables}{%
    \section*{\centering LIST OF TABLES}%
    \@starttoc{lot}%
}


\setlength{\cftbeforetoctitleskip}{-3.5em} % Adjust space before ToC title

</E:/VectorDrive\misc\preamble\preamble.tex>

<E:/VectorDrive\misc\preamble\preamblePPT.tex>
\documentclass[xcolor=table]{beamer}
\usetheme{default}
\usecolortheme{wolverine}
\usepackage{subfigure}
\usepackage{graphicx}
\usepackage{tabularx}
\usepackage{booktabs}
\usepackage{ragged2e}
\usepackage{caption}


\setbeamercolor{normal text}{fg=white}
\setbeamercolor{caption name}{fg=yellow}
\definecolor{mybg}{RGB}{2, 61, 150}
\setbeamercolor{background canvas}{bg=mybg}
\setbeamercolor{itemize item}{fg=yellow}
\setbeamertemplate{caption}{\color{yellow}\insertcaption}

\usefonttheme{professionalfonts}
\setbeamerfont{frametitle}{size=\large}
\setbeamerfont{normal text}{size=\large}

\beamertemplatenavigationsymbolsempty

\title{D.S.P. based Field Oriented Control of Induction motor}
\author{Adhithya S 200901002\\Anabhayan S P 200901008}
\date{Under the guidance of Dr S Rama Reddy \\ Dean - Electrical sciences \vspace{0.3in}\\                  {\small\textit{Department of Electrical and Electronics Engineering\\Rajalakshmi Engineering college}}}

\usepackage{tikz}

\usetikzlibrary{shapes.geometric, arrows}

\setbeamercolor{itemize item}{fg=yellow}

</E:/VectorDrive\misc\preamble\preamblePPT.tex>

<E:/VectorDrive\misc\titleBonAck\titleBonAck.tex>
\includepdf[pages=-]{misc/titleBonAck/FrontBon.pdf}


\prelimsection{\centering ACKNOWLEDGEMENT}


\vspace{1em} % Add some vertical space

We wish to express our deep sense of gratitude to our guide \textbf{Dr. S RAMA REDDY}, Professor, Department of Electrical and Electronics Engineering, for providing an opportunity to work on this project \textbf{``DSP BASED FIELD ORIENTED CONTROL OF INDUCTION MOTOR''}. We are also thankful for his enthusiastic guidance and encouragement in completing the project.

\vspace{0.5em} % Add some vertical space
We extend our thanks to project coordinator \textbf{Dr. A. NAZAR ALI}, Professor, Department of Electrical and Electronics Engineering, for his kind cooperation.

\vspace{0.5em} % Add some vertical space
We express our sincere thanks to \textbf{Dr. C. KAMALAKANNAN}, Professor and Head, Department of Electrical and Electronics Engineering, for his guidance and support during this project.

\vspace{0.5em} % Add some vertical space
We express our sincere thanks to \textbf{Dr. M. G. UMAMAHESWARI}, Professor, Department of Electrical and Electronics Engineering, for her guidance and support during this project

\vspace{0.5em} % Add some vertical space
We express our sincere thanks to \textbf{Dr. M. SUBBIAH}, Emeritus Professor, Department of Electrical and Electronics Engineering, for his guidance and support during this project.

\vspace{0.5em} % Add some vertical space
We express our thanks to \textbf{Dr. S.N. MURUGESAN}, Principal, Rajalakshmi Engineering College and management for his support and the facilities provided to complete our project on time.

\vspace{0.5em} % Add some vertical space
We also express our gratitude to our parents and friends for their moral support and valuable suggestions during the course of the project


\newpage
</E:/VectorDrive\misc\titleBonAck\titleBonAck.tex>

<E:/VectorDrive\sections\section1\section1.tex>
\clearpage
\pagenumbering{arabic}


\section{\centering INTRODUCTION}

\subsection{GENERAL}

\hspace{0.2in} The induction motor, a critical component in industry, has long been a focus of study and innovation due to its robustness, simplicity, and cost-effectiveness. It is a workhorse in various applications, ranging from small appliances to large industrial machines. However, the quest for achieving precise control over its operation has led to the development of sophisticated control strategies, one of which is Field Oriented Control (FOC). This project paper aims to explore the intricacies of FOC, its advantages over traditional control methods such as scalar control, and the practical implementation of its simulation for real-world applications.

Comparisons will also be done between different methods to estimate the rotor flux angle, which is a key parameter for FOC. Trade-offs will be evaluated between using sensor-less techniques or physical sensors, such as encoders or hall-effect sensors. It’s observed that FOC is more adaptive to the non-linearity and uncertainties of the induction motor, such as parameter variations, and saturation effects.


In industrial applications, where efficiency, performance, and precision control are non-negotiable, the traditional scalar control methods often fall short. Scalar control strategies, such as Volt/Hertz control, are simpler and less costly but do not adequately address the dynamic response and torque control requirements of modern applications. They fail to decouple the flux and torque-producing components of the motor currents, leading to sluggish response and compromised performance under varying loads.

In contrast, Field Oriented Control (FOC) provides a solution to these limitations by treating the induction motor akin to a separately excited DC motor, where torque and flux can be controlled independently. This decoupling allows for precise and independent control of speed and torque, akin to DC motors, which is vital in applications demanding high dynamic performance such as electric vehicles, CNC machines, and robotics.

The basic principle of FOC is to transform the three-phase stator currents and voltages into a two-phase coordinate system (d-q) that rotates synchronously with the rotor flux. This transformation simplifies the analysis and control of the induction motor, since the d-axis component of the current is responsible for the flux generation, and the q-axis component is responsible for the torque generation. By controlling these two components separately, the FOC can achieve a fast and accurate response to the speed and torque commands.

Key components and concepts of the FOC methodology include:
\begin{enumerate}
	\item  Coordinate Transformation: The transformation of the three-phase stator current variables into a two-coordinate (d-q) system using Clarke and Park transformations. This d-q reference frame rotates synchronously with the rotor flux, simplifying the dynamic model of the induction motor into a form that can be directly controlled.

	\item  Flux Estimation: The accurate estimation or measurement of the rotor flux position, which is central to the performance of FOC. Sensorless methods can use motor voltage and current to estimate the position, while sensor-based methods use encoders or resolvers for direct measurement.

	\item Control Algorithm: A control algorithm that takes the reference speed or torque and calculates the required voltage vectors in the d-q frame, which are then transformed back into three-phase voltages to be applied to the motor.

	\item Inverters and PWM: The use of voltage-source inverters and Pulse Width Modulation (PWM) techniques to generate the required voltages and currents that drive the motor according to the FOC strategy.

	\item At this moment we've performed the simulation for VVVF and FOC, and obtained the dynamic response of their speed and we've also simulated  $180^\circ$ mode inverter whose calculation is provided. Simulation and experimental results of our project, and discuss the challenges and future work will be presented.
\end{enumerate}
\subsection{LITERATURE SURVEY}



\hspace{0.2in}Arun Dominic Dn et.al (2014) - Analysis of field-oriented controlled induction motor drives overview of sensorless scheme This article  explores use of blanking periods and space vector modulation to enhance low-speed drive performance, providing a thorough technique review.[1]

\vspace{10mm} % add another 10 millimeters of space

Chen, Wen Zhuo, et al. (2014) -   Simulation of Permanent Magnet Synchronous Motor Field oriented Vector Control System   The text describes coordinate conversion's role in managing motor currents, especially excitation and torque.  Simulation results validate the vector control method's accuracy, supporting real-world system design.[3]


\vspace{10mm} % add 10 millimeters of space

Dianguo Xu  et.al (2018) -  A Review of Sensorless Control Methods for AC Motor Drives  Sensorless control - signal injection methods are simpler and easier to execute than model reference adaptive system and Kalman filter. Requires large amount of data.[5]




\vspace{10mm} % add another 10 millimeters of space

E.S.Tez (1995) A Simple Understanding of Field Orientation For Ac Motor Control The article teaches field-orientation for AC motor control, which aligns the stator and rotor fields for fast torque control. It corrects some wrong ideas about motor models and parameters, and shows a new field-orientation design called INVECTER.[4]

\vspace{10mm} % add another 10 millimeters of space

F. Yusivar, N. Hidayat et al (1980) -  Implementation of Field Oriented Control for Permanent Magnet Synchronous Motor     The article shows how microprocessors can control AC machines better with field orientation, which improves their dynamic performance.It explains the induction motor model and talks about the future possibilities in the field. [2]



\subsection{SUMMARY OF LITERATURE SURVEY}


\hspace{0.2in} Field-oriented control is a technique in AC motor drives that align the stator and rotor magnetic fields for efficient and responsive torque control, introducing advanced control strategies such as INVECTER, which correct misconceptions and improve upon traditional motor models.


The application of coordinate transformation, specifically in Permanent Magnet Synchronous Motors (PMSM), is critical for managing motor currents and optimizing control through Proportional-Integral (PI) controllers and Space Vector Pulse Width Modulation (SVPWM), with simulation results confirming the precision and effectiveness of these vector control methods.


Sensorless control methodologies for AC motor drives, including signal injection, offer a more straightforward and practical approach compared to complex systems like Model Reference Adaptive Systems (MRAS) and Kalman filters, though they require significant data processing.


Integration of microprocessors in the implementation of field-oriented control has significantly enhanced the dynamic performance of AC motors, with Permanent Magnet Synchronous Motors (PMSM) benefiting from improved control theories and practical implementation insights, along with foresight into future advancements in AC motor control.


Sophisticated techniques in field-oriented control of induction motors, such as the use of blanking periods and space vector modulation, are instrumental in improving low-speed drive performance, necessitating an in-depth analysis of these sensorless schemes to further refine control strategies.

\subsection{OBJECTIVES}
\begin{itemize}
	\item To simulate field oriented control of an induction motor using MATLAB/Simulink and analyze its performance compared to conventional scalar control.
	\item To implement different control strategies like proportional, PI and PID control for the current control loop and evaluate their impact on the dynamic response of the motor.

	\item To propose techniques to improve the low speed performance and dynamic response of the induction motor drive.
\end{itemize}

\subsection{ORGANIZATION OF THESIS}
\hspace{0.2in}This thesis is organized into four chapters, which are described as follows.

\begin{description}
	\item[] Chapter 1: Deals with the introduction, literature survey, and objectives.
	\item[] Chapter 2: Explains the functional block diagram and gives an explanation for each block.
	\item[] Chapter 3: Describes the software and closed-loop operation of the system.
	\item[] Chapter 4: Presents the conclusion, results, and scope for future work.
\end{description}

\subsection{CHAPTER SUMMARY}
\hspace{0.2in} Introduction, literature survey, objectives and organization of thesis are presented in this chapter.

\newpage
</E:/VectorDrive\sections\section1\section1.tex>

<E:/VectorDrive\sections\section2\section2.tex>

\section{\centering FIELD ORIENTED CONTROL}

\subsection{INTRODUCTION}

\hspace{0.2in}The FOC control loop shown involves some key mathematical transformations like the Clarke and Park transforms. The 3-phase stator currents are transformed to a 2-phase orthogonal reference frame by the Clarke transform. The Park transform then rotates this into the synchronous rotational reference frame aligned with the rotor flux. The required rotor position is obtained using incremental encoders, Hall-effect sensors, or sensorless methods. The flux and torque components in this rotating reference frame are decoupled, allowing for separate control through the PI controllers. The outputs of the PI controllers are transformed back to 3-phase voltages to drive the inverter. Space vector PWM is typically used to generate the gate signals for the inverter.
\subsection{BLOCK DIAGRAM OF FIELD ORIENTED CONTROL}

\hspace{0.2in}The Field Oriented Control (FOC) block diagram depicts the implementation of vector control of an AC induction motor (ACIM) using MATLAB. The desired speed ($\omega_{\text{ref}}$) is fed into a Proportional-Integral (PI) speed controller to compute the torque reference ($T_{\text{ref}}$). This torque reference, in conjunction with the ACIM control reference, is used to determine the reference direct and quadrature axis currents ($I_{sd_{\text{ref}}}$ and $I_{sq_{\text{ref}}}$), managed by two separate PI controllers for current regulation. The Park transform takes actual motor currents ($I_a, I_b$) and transforms them using the rotor's electrical position ($\theta_e$), obtained from a position generator along with a sine-cosine lookup. The Inverse Park transform takes the PI controllers' output ($V_{sd_{\text{ref}}}$ and $V_{sq_{\text{ref}}}$) and converts them back to the stationary reference frame ($V_{\alpha}$, $V_{\beta}$). Subsequently, these voltages are fed to a space vector generator that produces pulse-width modulation (PWM) signals for the inverter, which then drives the induction motor. The motor's actual speed ($\omega_r$) is measured and compared to the reference speed to ensure closed-loop control. Additionally, the slip speed estimator feeds into the position generator for accurate control, completing the FOC system loop. The block diagram shown in Fig. \ref{fig:FOCblock} depicts the main components of FOC for induction motor drive.


\begin{figure}
\centering
\includegraphics[width=4in]{sections/section2/images/blockDiagram.png}
\caption{Block Diagram Of FOC For I.M.}
\label{fig:FOCblock}
\end{figure}



This block diagram represents a typical vector control (also known as field-oriented control) for an AC Induction Motor (ACIM). It's an advanced control strategy used in variable frequency drives (VFDs) to control the torque and speed of a three-phase AC induction motor. Let's discuss each block and their roles in the control scheme:

\begin{enumerate}


  \item {PI Controller (speed):} This is a Proportional-Integral controller for the speed loop. It takes the speed reference ($\omega_{\text{ref}}$ or Speed\textsuperscript{ref}) and compares it with the actual rotor speed ($\omega_r$). The output of the PI controller is a reference torque ($T_{\text{ref}}$), which sets the desired motor torque corresponding to the target speed.
  
  \item {ACIM Control Reference:} It translates the reference torque into current components that will achieve this torque. These current components are referenced in the d-q coordinate system, where $I_{sd}^{\text{ref}}$ is the direct-axis current reference, and $I_{sq}^{\text{ref}}$ is the quadrature-axis current reference.
  
  \item {PI Controllers (current $I_d$ and $I_q$):} There are two PI controllers here for the current loop---one for the direct-axis current ($I_{sd}$) and another for the quadrature-axis current ($I_{sq}$). These controllers ensure that actual motor currents match the current references derived from the speed controller.
  
  \item {Park Transform:} This block transforms the three-phase stator currents ($I_a$, $I_b$, $I_c$) into a two-axis current vector ($I_d$, $I_q$) in the rotating reference frame (d-q frame), which simplifies control of the motor.
  
  \item {Sine-cosine Lookup and Position Generator:} It provides the sine and cosine of the electrical angle $\theta_e$, which is required for the Park and inverse Park transforms. The position generator computes the rotor's electrical angle based on the rotor speed and slip frequency, which is the difference between the electrical frequency and the mechanical rotor speed frequency.
  
  \item {Slip Speed Estimator:} It estimates the slip speed ($\omega_{\text{slip}}$) of the motor, which is the difference between the synchronous speed and the actual rotor speed. This is used, along with the rotor speed, to compute the electrical angle.
  
  \item {Inverse Park Transform:} This block takes the current references in the d-q axis ($V_{sd}^{\text{ref}}$, $V_{sq}^{\text{ref}}$) and converts them into voltage references in the stationary reference frame ($V_\alpha$, $V_\beta$) required for generating PWM signals.
  
  \item {Space Vector Generator:} This module generates the PWM (Pulse Width Modulation) signals necessary to control switches in the  
   inverter, based on the stationary reference frame voltages.
  
  \item {Inverter:} The inverter takes the DC voltage supply ($V_{dc}$) and switches it to synthesize variable-frequency AC voltage for the motor using the PWM signals it receives. This results in three-phase output voltages ($V_a$, $V_b$, $V_c$) that control the motor.
  
  \item {Induction Motor:} The actual physical motor that converts electrical power into mechanical power, which is controlled by the variable input voltages.
  
  \item {Clarke Transform:} This converts the three-phase stator currents ($I_a$, $I_b$, $I_c$) into two orthogonal components ($I_\alpha$, $I_\beta$) in the stationary reference frame, which is a precursor for the Park transform.
  
  \item {Speed Feedback:} The rotor speed is measured and fed back into the control system to adjust the control signal and maintain the desired speed accurately.
\end{enumerate}





\subsection{WORKING OF FOC}
The main components and their working is as follows:

\begin{enumerate}
    
\item Three phase voltages and currents from the motor are converted to two phase stationary reference frame using Clarke transformation.

\item The stationary reference frame is then converted to synchronous rotating reference frame aligned with the rotor flux using Park transformation.

\item Using feedback of rotor position/speed, flux and torque controllers generate reference current components in rotating frame.

\item Inverse Park and Clarke transforms convert these reference currents to three phase currents for the voltage source inverter.

\item SVPWM scheme is used to generate switching pulses for the inverter to achieve the reference currents.

\item Inverter supplies controlled three phase voltages to drive the induction motor.

\item Rotor position/speed sensor provides feedback for transformation calculations.
\end{enumerate}

\subsection{CHAPTER SUMMARY}
\hspace{0.2in} Introduction, block diagram and working of FOC are presented in this chapter.

\newpage
</E:/VectorDrive\sections\section2\section2.tex>

<E:/VectorDrive\sections\section3\section3.tex>
\section{SIMULATION RESULTS}

\subsection{BLOCK DIAGRAM OF THE SYSTEM}

\begin{figure}[H]
	\centering
	\includegraphics[width=6in]{sections/section3/images/simulation/blockDia.png}
	\caption{Block Diagram of the System}
	\label{fig:block_diagram}
\end{figure}


\subsection{SPEED CONTROL SUBSYSTEM}

\begin{figure}[H]
	\centering
	\includegraphics[width=4in]{sections/section3/images/simulation/speedControl/speedController.png}
	\caption{Speed Control System}
	\label{fig:speed_control_system}
\end{figure}


The speed control system shown in Figure \ref{fig:speed_control_system} consists of a DataStoreRead block that holds the speed reference value received from the host computer, a Discrete IIR lowpass filter block to cancel the zeros in the system, and a Discrete PID Controller with anti-windup block that takes the speed reference and feedback values as inputs and generates the torque reference as output. The ACIM Control reference block then takes the torque reference and speed reference as inputs and generates the $Isd_ref$ and $Isq_ref$ values, which are the reference values for the current control loop. The DQ limiter block is used to limit the magnitude of the vector represented in the d-q reference frame, with the option to prioritize either the d-axis or q-axis component.


\subsection{CURRENT CONTROL SUBSYSTEM}

\subsubsection{CURRENT MEASUREMENT}


\begin{figure}[H]
	\centering
	\includegraphics[width=4in]{sections/section3/images/simulation/inputScaling/currentMeasurement.png}
	\caption{Current Measurement}
	\label{fig:current_measurement}
\end{figure}


The current measurement part of the Input Scaling block shown in Figure \ref{fig:current_measurement}

converts the $Ia_{ADC}$ and $Ib_{ADC}$ inputs from the ADCs to the appropriate data type (int32) and removes the offsets ($Ia_{offset}$ and $Ib_{offset}$) that were previously calibrated. The signals then go through a series of gain blocks to convert them to per-unit (PU) values. The first gain block converts the ADC voltage to the actual voltage, the second gain block converts the voltage to current using the inverter's current sense voltage per amp, and the third gain block converts the current to PU using the motor's base current.


\subsubsection{POSITION AND SPEED ESTIMATION}



\begin{figure}[H]
	\centering
	\includegraphics[width=4in]{sections/section3/images/simulation/inputScaling/fluxObserver.png}
	\caption{Position and Speed Estimation}
	\label{fig:position_speed_estimation}
\end{figure}


The position and speed estimation part of the Input Scaling block shown in  Figure \ref{fig:position_speed_estimation} uses the $VI_{fb}$ signal, which contains the motor's voltage and current in the $\alpha \beta$ reference frame. This signal goes through a high-pass filter to remove low-frequency noise. The filtered signals are then fed into the Flux Observer block, which estimates the stator flux position. The estimated stator flux position is then used in the Speed Estimation block to calculate the motor's speed. The estimated speed is filtered using a low-pass IIR filter to remove high-frequency noise. The final rotor speed is calculated by subtracting the slip speed from the estimated stator flux speed and then dividing by the number of pole pairs to get the mechanical speed.

\subsubsection{CONTROL SYSTEM}



\begin{figure}[H]
	\centering
	\includegraphics[width=4in]{sections/section3/images/simulation/currentControl/controlSystem.png}
	\caption{Current Control System}
	\label{fig:current_control_system}
\end{figure}


The control system shown in Figure \ref{fig:current_control_system} implemented in the inner current loop consists of two main components: the current controllers and the DQO transformation.

The current controllers use Proportional-Integral (PI) controllers to minimize the error between the reference currents ($I_{dq\_ref}$) and the feedback currents ($I_{d\_fb}$ and $I_{q\_fb}$). The output of the PI controllers is then limited, filtered, and adjusted using a feedforward controller and a saturation function to ensure safe and reliable operation of the system. The adjusted d-axis current is then used to generate the reference voltages ($V_{d\_ref}$ and $V_{q\_ref}$) in the DQ frame. These reference voltages are then transformed into the alpha-beta frame using the stator flux position ($\theta$) and fed into the PWM reference generator block, which generates the three-phase voltage references for the inverter. This inner current loop ensures that the actual currents closely follow the desired reference currents, which is crucial for the overall performance and stability of the control system.



\subsection{SIMULATION RESULTS}

\subsubsection{SPEED RESPONSE}

\begin{figure}[H]
	\centering
	\includegraphics[width=6in]{sections/section3/images/simulationResutls/SpeedTrackingNoCursor.png}
	\caption{Speed Response}
	\label{fig:speed_response}
\end{figure}


\begin{figure}[H]
	\centering
	\includegraphics[width=6in]{sections/section3/images/simulationResutls/SlipSpeed.png}
	\caption{Slip Speed}
	\label{fig:slip_speed}
\end{figure}

\subsubsection{CURRENT RESPONSE}


\begin{figure}[H]
	\centering
	\includegraphics[width=6in]{sections/section3/images/simulationResutls/Ia_Ib_fb.png}
	\caption{Ia and Ib Feedback/Measured Currents}
	% \label{fig:current_response }
\end{figure}


\begin{figure}[H]
	\centering
	\includegraphics[width=6in]{sections/section3/images/simulationResutls/Id_ref_Iq_ref.png}
	\caption{Id and Iq Reference Currents}
	% \label{fig:current_response }
\end{figure}


\begin{figure}[H]
	\centering
	\includegraphics[width=6in]{sections/section3/images/simulationResutls/Id_fb_Iq_fb.png}
	\caption{Id and Iq Feedback Currents}
	% \label{fig:current_response }
\end{figure}

\begin{figure}[H]
	\centering
	\includegraphics[width=6in]{sections/section3/images/simulationResutls/Iq_ref_fb.png}
	\caption{Iq Reference and Feedback Currents (Torque producing current)}
	% \label{fig:current_response }
\end{figure}

\begin{figure}[H]
	\centering
	\includegraphics[width=6in]{sections/section3/images/simulationResutls/Id_ref_fb.png}
	\caption{Id Reference and Feedback Currents (Magnetizing current)}
	% \label{fig:current_response }
\end{figure}

\newpage
</E:/VectorDrive\sections\section3\section3.tex>

<E:/VectorDrive\sections\section4\section4.tex>
\section{HARDWARE RESULTS}

\subsection{Induction Motor}

\begin{figure}[H]
	\centering
	\includegraphics[width=4.0in]{sections/section4/images/inductionMotor/revo.png}
	\caption{Image of Induction Motor}
\end{figure}

We are using a revo 3 phase induction motor with the following specifications:

\begin{table}[H]
	\centering
	\begin{tabular}{|c|c|}
		\hline
		\textbf{Parameter} & \textbf{Value} \\ \hline
		Power & 0.25 Hp or  \\ \hline
		Voltage & 415 V (L-L) RMS \\ \hline
		Current & 6.5 A \\ \hline
		Frequency & 50 Hz \\ \hline
		Speed & 1440 rpm \\ \hline
		Phase & 3 \\ \hline
	\end{tabular}
	\caption{Induction Motor Nameplate Details}
\end{table}



\subsection{F23879d Launchpad}

\begin{figure}[H]
	\centering
	\includegraphics[width=4in]{sections/section4/images/f23879d/launchxl-f28379d-angled.png}
	\caption{Image of F28379D Launchpad}
\end{figure}


\subsection{Intelligent Power Module Fsam20sh60a}

\begin{figure}[H]
	\centering
	\includegraphics[width=3in]{sections/section4/images/IPM/ipm.png}
	\caption{Image of FSAM20SH60A module}
\end{figure}


We integrated the FSAM20SH60A, a Motion SPM® 2 module, as a fundamental component. This UL Certified (No. E209204 UL1557) device is a high-performance 3-phase IGBT inverter with integrated gate drivers and protection, proving to be an ideal solution for AC Induction, BLDC, and PMSM motors.

The FSAM20SH60A is designed with low-loss, short-circuit rated IGBTs, and an optimized gate drive to minimize EMI and losses. It also incorporates multiple on-module protection features such as under-voltage lockouts, over-current shutdown, thermal monitoring, and fault reporting, thus ensuring robust and reliable operation. 

One of the unique features of this module is its low thermal resistance achieved through the use of a ceramic substrate. It also includes separate open-emitter pins from low-side IGBTs for three-phase current sensing, supporting a wide variety of control algorithms. 

The FSAM20SH60A is tailored for a 15 kHz switching frequency and features a built-in NTC thermistor for accurate temperature monitoring. It operates on a single-grounded power supply and offers an inverter power rating of 1.5 kW at an input voltage range of 100~253 VAC. 

Moreover, the module provides an adjustable current protection level, allowing for customization via the selection of Sense-IGBT Emitter's external Rs. It also boasts an impressive isolation rating of 2500 Vrms per minute. 

The high-speed HVIC integrated into the FSAM20SH60A requires only a single supply voltage and effectively translates the incoming logic-level gate inputs to the high-voltage, high-current drive signals required to properly drive the module's internal IGBTs. 



\subsection{Pcb Design}

\begin{figure}[H]
	\includegraphics[width=6in]{sections/section4/images/PCBDesign/ApplicationCircuitfromDatasheet.png}
	\caption{Application Circuit from FSAM20SH60A Datasheet}
\end{figure}

In the PCB design section of our project, we developed a printed circuit board for the FSAM20SH60A, an intelligent power module. Our design strategy was primarily guided by the application circuit provided in the datasheet of the module. 

The application circuit served as a reference point for designing the PCB, ensuring that we adhered to the technical specifications and requirements of the module. In particular, we paid careful attention to the layout and routing of the circuit traces, the placement of components, and the thermal management considerations. 

The PCB design was optimized to facilitate the features and functions of the FSAM20SH60A. This included provisions for three-phase current sensing through separate open-emitter pins from low-side IGBTs, as well as accommodating the single-grounded power supply. 

Moreover, the design ensured the proper functioning of the built-in NTC thermistor for temperature monitoring, and the high-speed HVIC that requires only a single supply voltage. The layout also considered the adjustable current protection level, which can be customized via the selection of Sense-IGBT Emitter's external Rs. 

Software tools from National Instrument's circuit design suite were utilized to create the PCB layout. Multisim 14.3 was used for the schematic capture, while Ultiboard 14.3 was employed for the PCB layout design.

\begin{figure}[H]
	\centering
	\includegraphics[width=4in]{sections/section4/images/PCBDesign/Ultiboard/Ultiboard.png}
	\caption{PCB Layout Design in Ultiboard}
\end{figure}


\begin{figure}[H]
	\centering
	\includegraphics[width=3.5in]{sections/section4/images/PCBDesign/Ultiboard/3DTopView.png}
	\caption{3D View of PCB Layout Design in Ultiboard}
\end{figure}


\subsection{Current Measurement}

In our project, we implemented a strategy for current measurement using a shunt power resistor of 5 milli-ohms. This resistor was incorporated into two of the phase low pass filters, providing a reliable method for detecting and measuring the current flow.

Following the current detection, the signal was then directed to an IA182 operational amplifier. This component was crucial in amplifying the signal to a level suitable for further processing. The IA182 opamp was selected due to its high precision and stability, ensuring accurate amplification of the current signal.

Post amplification, the signal was fed into the Analog-to-Digital Converter (ADC) of the F28379D Launchpad. This conversion process transformed the analog current signal into a digital format, enabling the microcontroller to effectively interpret and utilize the data for further processing and control within the system. 


% Current sensing figure in multisim

\begin{figure}[H]
	\centering
	\includegraphics[width=6in]{sections/section4/images/PCBDesign/Multisim/MultisimCurrentSensing.png}
	\caption{Current Sensing Circuit in Multisim one of the phase is shown}
\end{figure}


\subsubsection{ADC CONFIG}


\newpage
</E:/VectorDrive\sections\section4\section4.tex>

<E:/VectorDrive\sections\section5\section5.tex>
\subsection{ACIM Parameter Estimation}

A Fluke energy analyser is used over regular analog meters for more reliable and accurate measurement of the voltage, current and active power. But, for low current and power measurements properly calibrated analog meters would suffice as the the energy analyser wouldn’t be able to measure currents less than one amp.

\subsubsection{Cold Test}

The stator resistance is measured by running the motor at its rated current for 5 minutes or up until it reaches its thermal equilibrium.


\subsubsection{No-Load Test}

% hardware setup for no-load test

\begin{figure}[H]
	\centering
	\includegraphics[width=4in]{sections/section5/images/ParamEstim/SetupNoload.jpg}
	\caption{No-load test setup}
	\label{fig:no_load_test_setup}
\end{figure}

The no-load setup has 1Hp induction motor connected to variable frequency drive (VFD) to supply no-load losses like friction and windage losses of 0.25Hp motor which is connected to the power analyzer.


% Fluke 434 analyzer image voltage amps hertz is shown in the figure

\begin{figure}[H]
	\centering
	\includegraphics[width=4in]{sections/section5/images/ParamEstim/FlukeVoltAmpHertz.png}
	\caption{Fluke 434 power analyzer}
	\label{fig:fluke434}
\end{figure}

% From R Krishnan book circuit equivalent figure

\begin{figure}[H]
	\centering
	\includegraphics[width=4in]{sections/section5/images/ParamEstim/noloadCircuitKrish.png}
	\caption{No-load test circuit}
	\label{fig:no_load_test}
\end{figure}

The no-load power factor is given by:
$$\cos \phi_0 = \frac{P_i}{V_\text{as}I_0}$$

The magnetizing current is calculated as:
$$I_m = I_0 \sin \phi_0$$

The core-loss current is given by:
$$I_c = I_0 \cos \phi_0$$

The magnetizing inductance is computed from:
$$L_m = \frac{V_\text{as}}{2\pi f_\text{i}I_m}$$

The core-loss resistance is given by:
$$R_c = \frac{V_\text{as}}{I_c}$$


\subsubsection{BLOCKED Test}

% Blocked rotor circuit equivalent figure

\begin{figure}[H]
	\centering
	\includegraphics[width=4in]{sections/section5/images/ParamEstim/blockedCircuitKrish.png}
	\caption{Blocked rotor test circuit}
	\label{fig:blocked_rotor_test}
\end{figure}


The short-circuit power factor obtained from the equivalent circuit is:
$$\cos \phi_\text{sc} = \frac{P_\text{sc}}{V_\text{sc}I_\text{sc}}$$

The short-circuit impedance is given by:
$$Z_\text{sc} = \frac{V_\text{sc}}{I_\text{sc}}$$

From which the rotor resistance and total leakage reactance are computed as:
$$R_r = Z_\text{sc} \cos \phi_\text{sc} - R_s$$
$$X_\text{eq} = Z_\text{sc} \sin \phi_\text{sc}$$

where the total leakage reactance per phase, $X_\text{eq}$, is the sum of the stator and referred-rotor leakage reactances, given as:
$$X_\text{eq} = X_\text{ls} + X_\text{lr}$$



Based on the above test and calculations, the equivalent circuit parameters are computed as follows:

% Alighn left

\begin{flalign*}
	&L_m = 1.01, R_c = 1555.85                  &\\
	&R_r = 5.02, X_{ls} = 50.47, X_{lr} = 50.47 &
\end{flalign*}


\newpage
</E:/VectorDrive\sections\section5\section5.tex>

<E:/VectorDrive\sections\section6\section6.tex>
\subsection{SPACE VECTOR PULSE WIDTH MODULATION}

Space Vector PWM has several advantages over Sine PWM

\begin{itemize}
	\item Higher voltage utilization: SVPWM can utilize up to 15\% more DC bus voltage compared to SPWM. This means for the same DC supply voltage, an inverter with SVPWM can provide a higher output voltage.

	\item Better harmonic performance: SVPWM results in lower total harmonic distortion (THD) compared to SPWM. This leads to a better quality of the output voltage and current waveforms, which is particularly important in applications like drives where harmonics can cause heating and torque pulsations.

	\item Reduced switching losses: SVPWM requires fewer switching operations for the inverter switches compared to SPWM. This results in lower switching losses, leading to higher efficiency and reduced heating of the inverter switches.

	\item Improved dynamic response: The space vector representation used in SVPWM allows for a more precise control of the output voltage vector, leading to an improved dynamic response. This is particularly beneficial in applications like motor drives where a fast dynamic response is required.

	\item Vector control capability: SVPWM allows for vector control of the output voltage, which is not possible with SPWM. This enables more complex control strategies, such as field-oriented control (FOC), which can provide better performance in applications like motor drives.

	\item Flexibility: SVPWM allows for flexible control of the output voltage magnitude and frequency, as well as the phase relationship between the output voltage and current. This flexibility makes it suitable for a wide range of applications.
\end{itemize}

\subsubsection{Generation Of Space Vector PWM With C2000 Microcontroller}

To generate space vector PWM wave for the switches C2000 series microcontroller offers a hardware level module called ePWM or enhanced PWM module. It enables to generate PWM waves with high flexibility.

To generate symmetrical waveform, the ePWM's internal timer is configured in up-down count mode.

\subsubsection{Pwm Frequency Calculation}

\subsection*{VARIABLE DEFINITIONS}

\renewcommand{\arraystretch}{1.5}
\begin{tabular}{|>{\bfseries}l|l|}
	\hline
	Symbol      & Description                                 \\ \hline
	$F_{PWM}$   & Frequency of PWM (Hz)                       \\ \hline
	$T_{PWM}$   & Time period of PWM (seconds)                \\ \hline
	$TBCLK$     & Time base clock (Hz)                        \\ \hline
	$T_{TBCLK}$ & Time period of time base clock (in seconds) \\ \hline
	$TBPRD$     & Timer period (in clock cycles)              \\ \hline
	$EPWMCLK$   & ePWM module clock (in Hz)                   \\ \hline
	$HSPCLKDIV$ & High speed clock divider                    \\ \hline
	$CLKDIV$    & Clock divider                               \\ \hline
\end{tabular}

\vspace{0.2in}

The period of the PWM signal can be calculated using the formula:
\[
	T_{\text{PWM}} = 2 \times TBPRD \times T_{\text{TBCLK}}
\]
where \( TBPRD \) is the time base period.

\subsection{PWM FREQUENCY (\( F_{\text{PWM}} \))}


THE frequency of the PWM signal is defined as the inverse of the PWM period:
\[
	F_{\text{PWM}} = \frac{1}{T_{\text{PWM}}}
\]

\subsection{TIME BASE CLOCK (\( T_{\text{TBCLK}} \))}
THE TIME Base clock is given by:
\[
	T_{\text{TBCLK}} = \frac{\text{EPWMCLK}}{\text{HSPCLKDIV} \times \text{CLKDIV}}
\]
\begin{itemize}
	\item \( \text{EPWMCLK} \) is the clock frequency dedicated to the PWM module.
	\item \( \text{HSPCLKDIV} \) and \( \text{CLKDIV} \) are the dividers for the high-speed PWM clock.
\end{itemize}

\subsection{TIMER PERIOD (\( TBPRD \))}

\[
	TBPRD = {T_{\text{PWM}} \over 2 \times T_{\text{TBCLK}}}
\]

According to the FSAM20SH60A datasheet, a 15 kHz switching frequency is recommended for optimal performance. The dividers \( \text{HSPCLKDIV} \) and \( \text{CLKDIV} \) are both set to 1. Given that the EPWMCLK is derived from the system clock (SYSCLK) which operates at 200 MHz, the time base clock can be calculated as follows:

Given the PWM period \( T_{\text{PWM}} \) and the TBCLK frequency \( T_{\text{TBCLK}} \), we need to solve for \( TBPRD \) (Time Base Period Register). The calculations are as follows:

\begin{enumerate}
	\item \textbf{Calculation of \( T_{\text{PWM}} \):}
	      \[
		      T_{\text{PWM}} = \frac{1}{15 \times 10^3} \text{ seconds}
	      \]
	      This represents the period of the PWM.

	\item \textbf{Calculation of \( T_{\text{TBCLK}} \):}
	      \[
		      TBCLK = \frac{200 \times 10^6}{1 \times 1} = 200 \times 10^6 \text{ Hz}
	      \]
	      This is the frequency of the TBCLK (Time Base Clock).

	\item \textbf{Solving for \( TBPRD \):}
	      With \( T_{\text{PWM}} \) and \( T_{\text{TBCLK}} \) known, we get $6667$.
\end{enumerate}


Figure \ref{fig:svpwm_block} below shows the ePWM block in Simulink, which is used generate PWM waveforms from microcontroller.

\begin{figure}[H]
	\centering
	\includegraphics[width=1.8in]{sections/section6/images/SVPWM/ePWMBlock.png}
	\caption{ePWM block in Simulink}
	\label{fig:svpwm_block}
\end{figure}

Figure \ref{fig:ePWMTBPRD} below shows the ePWM module configuration.

\begin{figure}[H]
	\centering
	\includegraphics[width=4.3in]{sections/section6/images/SVPWM/ePWMTBPRD.png}
	\caption{ePWM configuration in Simulink}
	\label{fig:ePWMTBPRD}
\end{figure}

\subsubsection{Output Of Svpwm With Low Pass Filter}


The fundamental low frequency wave is buried within the 15 kHz carrier wave. Thus passed through a low pass filter to extract the fundamental frequency and hardware setup is shown in Figure \ref{fig:hardwareSetupLPF}.

\begin{figure}[H]
	\centering
	\includegraphics[width=4.3in]{sections/section6/images/SVPWM/LPFandC2000.jpg}
	\caption{Hardware setup with RC filter and Launchpad}
	\label{fig:hardwareSetupLPF}
\end{figure}

The output of the SVPWM with low pass filter is shown in Figure \ref{fig:OutputLPF}. The output is a SVPWM wave of 2 phases with a frequency 3hz.


\begin{figure}[H]
	\centering
	\includegraphics[width=4.3in]{sections/section6/images/SVPWM/SVPWM2phases.jpg}
	\caption{Output of SVPWM with low pass filter}
	\label{fig:OutputLPF}
\end{figure}


\subsubsection{Dead Band}

Dead band is a time delay between the switching of the upper and lower switches in the inverter. This is necessary to prevent short circuiting of the DC bus. The dead band time is set in the ePWM module. The dead band time can be configured in the ePWM module, and it can be specified in terms of the number of clock cycles or in terms of time. The datasheet of FSAM20SH60A smart power module recommends a dead band time of atleast 3us.


\vspace{0.2in}

An example of 20us dead band time is shown in Figure \ref{fig:deadBand}. The two waveforms shown are output of ePWM 1A and 1B which will be given to the upper and lower switches of the inverter respectively.

\begin{figure}[H]
	\centering
	\includegraphics[width=4.3in]{sections/section6/images/SVPWM/DeadBand20Us.jpeg}
	\caption{Dead band time}
	\label{fig:deadBand}
\end{figure}


\newpage
</E:/VectorDrive\sections\section6\section6.tex>

<E:/VectorDrive\sections\section7\section7.tex>
\section{Conclusion}

\newpage
</E:/VectorDrive\sections\section7\section7.tex>

<E:/VectorDrive\sections\section8\section8.tex>

</E:/VectorDrive\sections\section8\section8.tex>

